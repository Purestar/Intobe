var c=Object.defineProperty;var d=(e,t,r)=>t in e?c(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var i=(e,t,r)=>d(e,typeof t!="symbol"?t+"":t,r);import{r as p}from"./lit-element.js";import{x as u}from"./if-defined.js";import"./unsafe-html.js";import"./core.js";import{r as o}from"./workspaceHeader.js";import{w as g}from"./workspaceCore.js";class n extends g(p){constructor(){super(),this.items=[]}connectedCallback(){super.connectedCallback()}handleInputChange(t){const r=document.querySelector("workspace-container").shadowRoot.querySelector("ig-wrap workspace-view").shadowRoot.querySelector("ig-wrap .workspace-view-area .workspace-view").contentWindow.document.documentElement,s=o.findIndex(a=>a.id===this.group),m=o[s].items.findIndex(a=>a.name===t.target.dataset.root);document.documentElement.style.setProperty("--"+t.target.dataset.root,t.target.value+t.target.dataset.unit),r.style.setProperty("--"+t.target.dataset.root,t.target.value+t.target.dataset.unit),o[s].items[m].value=t.target.value,localStorage.setItem("RootCSS",JSON.stringify(o))}render(){if(this.items!==void 0)return u`
				<ig-form type="${this.items.type}"></ig-form>
			`}}i(n,"properties",{group:{type:String},items:{type:Array}});customElements.define("workspace-setting-form",n);
