import"./core.js";import"./lit-element.js";import"./if-defined.js";const o=t=>class extends t{static get properties(){return{isMenuOpen:{type:Boolean},isSettingOpen:{type:Boolean}}}constructor(){super(),this.isMenuOpen=!1}createRenderRoot(){return this}connectedCallback(){super.connectedCallback(),window.addEventListener("menu-toggle",this.handleMenu.bind(this)),window.addEventListener("setting-toggle",this.handleSetting.bind(this))}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("menu-toggle",this.handleMenu.bind(this)),window.removeEventListener("setting-toggle",this.handleSetting.bind(this))}handleMenu(e){e instanceof CustomEvent?this.isMenuOpen=e.detail.isMenuOpen:(this.isMenuOpen=!this.isMenuOpen,window.dispatchEvent(new CustomEvent("menu-toggle",{detail:{isMenuOpen:this.isMenuOpen}})))}handleSetting(e){e instanceof CustomEvent?this.isSettingOpen=e.detail.isSettingOpen:(this.isSettingOpen=!this.isSettingOpen,window.dispatchEvent(new CustomEvent("setting-toggle",{detail:{isSettingOpen:this.isSettingOpen}})))}};export{o as w};
