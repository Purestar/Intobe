import{r as s}from"./lit-element.js";import{x as r}from"./if-defined.js";import{p as i,c as n}from"./core.js";class l extends i(s){static get properties(){return{count:{type:Number,reflect:!0},delay:{type:Number,reflect:!0},loop:{type:Boolean,reflect:!0},start:{type:Number,reflect:!0},step:{type:Number,reflect:!0},to:{type:Number,reflect:!0}}}constructor(){super(),this.customClass=this.getAttribute("custom-class"),this.defaultClass=this.getAttribute("default-class")||"count",this.typeClass=this.getAttribute("type")||"type",this.element=this.getAttribute("element")||"span",this.delay=1,this.start=0,this.step=1,this.to=10,this.count=this.start,this.increment=this.step,this.interval=null,this.loop=!1}disconnectedCallback(){super.disconnectedCallback(),clearInterval(this.interval)}updated(t){super.updated(t),["start","to","step","delay","loop"].some(e=>t.has(e))&&(this.resetCount(),this.startCount())}resetCount(){this.count=this.start,this.increment=this.start<this.to?this.step:-this.step}startCount(){clearInterval(this.interval),this.interval=setInterval(()=>{this.increment>0&&this.count>=this.to||this.increment<0&&this.count<=this.to?this.loop?this.resetCount():clearInterval(this.interval):(this.count+=this.increment,this.requestUpdate())},this.delay*1e3)}render(){return r`${this.count}`}}customElements.define(`${n}count`,l);
