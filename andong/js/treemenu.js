import{r as n}from"./lit-element.js";import{x as h}from"./if-defined.js";import"./unsafe-html.js";import{p as o,c as u}from"./core.js";class l extends o(n){static get properties(){return{open:{type:Boolean,reflect:!0},singleCheck:{type:Boolean,reflect:!0}}}constructor(){super(),this.customClass=this.getAttribute("customClass"),this.defaultClass=this.getAttribute("defaultClass")||"tree",this.typeClass=this.hasAttribute("type")?"type-"+this.getAttribute("type"):this.getAttribute("type")||"type",this.open=this.hasAttribute("open")||!1,this.singleCheck=this.hasAttribute("singleCheck"),this.debugComponentMessage={개별체크:{key:"singleCheck",value:this.singleCheck},Opened:{key:"open",value:this.open}}}firstUpdated(){this.renderStatic()}processData(s){for(let e of s)e.checked&&e.subitem&&this.updateChildrenState(e.subitem,!0),e.subitem&&this.processData(e.subitem)}handleCheck(s,e){s.preventDefault();const t=s.target.checked;this.singleCheck?e.checked=t:this.updateItemState(this.data,e,t),this.requestUpdate()}handleSingleCheckChange(){this.singleCheck?this.resetCheckStates(this.data):this.processData(this.data),this.requestUpdate()}resetCheckStates(s){for(let e of s)e.subitem&&this.resetCheckStates(e.subitem)}updateItemState(s,e,t){for(let r of s){if(r===e)return r.checked=t,!this.singleCheck&&r.subitem&&this.updateChildrenState(r.subitem,t),!0;if(r.subitem&&this.updateItemState(r.subitem,e,t))return this.singleCheck||(r.checked=r.subitem.every(a=>a.checked)),!0}return!1}updateChildrenState(s,e){if(!this.singleCheck)for(let t of s)t.checked=e,t.subitem&&this.updateChildrenState(t.subitem,e)}renderStatic(){const s=new Set,e=t=>{if(s.has(t))return[];s.add(t);const a=Array.from(t.childNodes).filter(i=>i.nodeType===Node.ELEMENT_NODE).filter(i=>i.tagName.toLowerCase()==="ig-menu").map(i=>({item:Array.from(i.childNodes),checkbox:i.hasAttribute("checkbox"),checked:i.hasAttribute("checked")})),c=Array.from(t.childNodes).filter(i=>i.nodeType===Node.ELEMENT_NODE).filter(i=>i.tagName.toLowerCase()==="ig-item").flatMap(e);return c.length>0&&(a[a.length-1].subitem=c,a[a.length-1].checked&&this.updateChildrenState(c,!0)),a};this.data=Array.from(this.querySelectorAll("ig-item")).filter(t=>!s.has(t)).flatMap(e),this.querySelectorAll(":scope > ig-item").forEach(t=>t.remove())}renderItem(s){return h`
			${s.map(e=>h`
				<details class="${this.defaultClass}-inner${e.subitem?` ${this.defaultClass}-sub-item`:""}" ?open=${this.open}>
					<summary>
						${e.subitem?h`<span class="tree-arrow"></span>`:""}
						${e.checkbox?h`<ig-form type="checkbox" ?checked="${e.checked}" @input="${t=>this.handleCheck(t,e)}"></ig-form>`:""}
						${e.item}
					</summary>
					${e.subitem?h`${this.renderItem(e.subitem)}`:""}
				</details>
			`)}
		`}render(){return this.data.length?h`${this.renderItem(this.data)}`:h`<p class="no-data">${this.nodata}</p>`}}customElements.define(`${u}tree`,l);
